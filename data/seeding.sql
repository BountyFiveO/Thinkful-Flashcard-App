CREATE TABLE IF NOT EXISTS decks (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL,
    description TEXT NOT NULL
);
INSERT INTO decks
    (id, name, description)
    VALUES  (
       '1',
      'Redering in React',
      'Reacts component structure allows for quickly building a complex web application that relies on DOM manipulation. '
    ),
    (  2,
      'React Router',
      'React Router is a collection of navigational components that compose declaratively with your application.'
      
    ),
    (
       3,
      'Testing',
      'Will be used for testing this app'
    ),
    (
       4,
      'React Hooks',
      'React Hooks are a new addition in React 16.8. They let you use state and other React features without writing a class.'
    ),
    (
       5,
      'React Context',
      'Context provides a way to pass data through the component tree without having to pass props down manually at every level.'
    ),
    (
       6,
      'React Forms',
      'Forms are essential for controlling user input, gathering information to submit to a server, and setting up basic interactivity with a website.'
    ),
    (
       7,
      'React State',
      'State is the heart of React. It allows you to create components that manage their own data, respond to user input, and hold complex UIs.'
    ),
    (
       8,
      'React Props',
      'Props are how components talk to each other. They are passed to components via HTML attributes.'
    ),
    (
       9,
      'React Components',
      'Components are the core building block of React. They are like JavaScript functions that return React elements.'
    ),
    (
       10,
      'React',
      'React is a declarative, efficient, and flexible JavaScript library for building user interfaces.'
    )
CREATE TABLE IF NOT EXISTS cards (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    front TEXT NOT NULL,
    back TEXT NOT NULL,
    deck_id INTEGER NOT NULL,
    FOREIGN KEY (deck_id) REFERENCES decks(id)
);
INSERT INTO cards
    (id, back, deck_id)
    VALUES  ( 
      'How do you modify the state of a different React component?',
      'Not at all! State is visible to the component only.',
      1
    ),  
    (  
     'How do you pass data 'down' to a React child component?',
      'As properties or props',
      1
    ),
    (
      'What does <Switch> do?',
      'Renders the first matching child <Route> ',
      2,
      5
    ),
    (
        'What is the difference between a functional component and a class component?',
        'A functional component is a function that returns JSX. A class component is a class that extends React.Component and has a render method that returns JSX.',
        1,
        6
    ),
    (
      'What is the difference between a controlled component and an uncontrolled component?',
      'A controlled component is a component that has its state controlled by React. An uncontrolled component is a component that has its state controlled by the DOM.',
      1,
     7
    ), 
    (
      'What is the difference between a stateless component and a stateful component?',
      'A stateless component is a component that does not have state. A stateful component is a component that has state.',
      1,
      8
    ),
    (
      'What is the difference between a presentational component and a container component?',
      'A presentational component is a component that is concerned with how things look. A container component is a component that is concerned with how things work.',
      1,
     9
    ),
    (
      'What is the difference between a smart component and a dumb component?',
      'A smart component is a component that has state. A dumb component is a component that does not have state.',
      1,
      10
    ),
    (
      'What is the difference between a controlled component and an uncontrolled component?',
      'A controlled component is a component that has its state controlled by React. An uncontrolled component is a component that has its state controlled by the DOM.',
      1,
      11
    ),
    (
      'What is the difference between a stateless component and a stateful component?',
      'A stateless component is a component that does not have state. A stateful component is a component that has state.',
      1,
      12
    ),
    (
      'What is the difference between a presentational component and a container component?',
      'A presentational component is a component that is concerned with how things look. A container component is a component that is concerned with how things work.',
      1,
      13
    ),
    (
      'What is the difference between a smart component and a dumb component?',
      'A smart component is a component that has state. A dumb component is a component that does not have state.',
      1,
      14
    ),
    (
      'What is the difference between a controlled component and an uncontrolled component?',
      'A controlled component is a component that has its state controlled by React and an uncontrolled component is a component that has its state controlled by the DOM.',
      1,
      15
    )