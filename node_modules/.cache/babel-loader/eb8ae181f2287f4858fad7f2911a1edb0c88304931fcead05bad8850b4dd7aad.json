{"ast":null,"code":"import _slicedToArray from\"C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/**\r\n * Use this function to dynamically assign the className property of react components.\r\n *\r\n * Usage:\r\n *\r\n *  <span className={classNames({\r\n *               \"oi\": true,\r\n *               \"oi-media-play\": currentState.isPaused,\r\n *               'oi-media-pause': !currentState.isPaused\r\n *             })}/>\r\n *\r\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\r\n *\r\n * @param classNameToBoolean\r\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\r\n * @returns {string}\r\n *    a space delimited string of the class names which have a value of `true`.\r\n */export default function classNames(classNameToBoolean){return Object.entries(classNameToBoolean).reduce(function(classes,_ref){var _ref2=_slicedToArray(_ref,2),className=_ref2[0],value=_ref2[1];return classes.concat(value?className:undefined);},[]).filter(function(className){return className!==undefined;}).join(\" \");}","map":{"version":3,"names":["classNames","classNameToBoolean","Object","entries","reduce","classes","className","value","concat","undefined","filter","join"],"sources":["C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/src/utils/class-names/index.js"],"sourcesContent":["/**\r\n * Use this function to dynamically assign the className property of react components.\r\n *\r\n * Usage:\r\n *\r\n *  <span className={classNames({\r\n *               \"oi\": true,\r\n *               \"oi-media-play\": currentState.isPaused,\r\n *               'oi-media-pause': !currentState.isPaused\r\n *             })}/>\r\n *\r\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\r\n *\r\n * @param classNameToBoolean\r\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\r\n * @returns {string}\r\n *    a space delimited string of the class names which have a value of `true`.\r\n */\r\nexport default function classNames(classNameToBoolean) {\r\n\treturn Object.entries(classNameToBoolean)\r\n\t\t.reduce(\r\n\t\t\t(classes, [className, value]) =>\r\n\t\t\t\tclasses.concat(value ? className : undefined),\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.filter((className) => className !== undefined)\r\n\t\t.join(\" \");\r\n}\r\n"],"mappings":"4IAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASA,WAAU,CAACC,kBAAkB,CAAE,CACtD,MAAOC,OAAM,CAACC,OAAO,CAACF,kBAAkB,CAAC,CACvCG,MAAM,CACN,SAACC,OAAO,wCAAGC,SAAS,UAAEC,KAAK,gBAC1BF,QAAO,CAACG,MAAM,CAACD,KAAK,CAAGD,SAAS,CAAGG,SAAS,CAAC,GAC9C,EAAE,CACF,CACAC,MAAM,CAAC,SAACJ,SAAS,QAAKA,UAAS,GAAKG,SAAS,GAAC,CAC9CE,IAAI,CAAC,GAAG,CAAC,CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}