{"ast":null,"code":"/**\r\n * Use this function to dynamically assign the className property of react components.\r\n *\r\n * Usage:\r\n *\r\n *  <span className={classNames({\r\n *               \"oi\": true,\r\n *               \"oi-media-play\": currentState.isPaused,\r\n *               'oi-media-pause': !currentState.isPaused\r\n *             })}/>\r\n *\r\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\r\n *\r\n * @param classNameToBoolean\r\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\r\n * @returns {string}\r\n *    a space delimited string of the class names which have a value of `true`.\r\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean).reduce((classes, _ref) => {\n    let [className, value] = _ref;\n    return classes.concat(value ? className : undefined);\n  }, []).filter(className => className !== undefined).join(\" \");\n}","map":{"version":3,"names":["classNames","classNameToBoolean","Object","entries","reduce","classes","className","value","concat","undefined","filter","join"],"sources":["C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/src/utils/class-names/index.js"],"sourcesContent":["/**\r\n * Use this function to dynamically assign the className property of react components.\r\n *\r\n * Usage:\r\n *\r\n *  <span className={classNames({\r\n *               \"oi\": true,\r\n *               \"oi-media-play\": currentState.isPaused,\r\n *               'oi-media-pause': !currentState.isPaused\r\n *             })}/>\r\n *\r\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\r\n *\r\n * @param classNameToBoolean\r\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\r\n * @returns {string}\r\n *    a space delimited string of the class names which have a value of `true`.\r\n */\r\nexport default function classNames(classNameToBoolean) {\r\n\treturn Object.entries(classNameToBoolean)\r\n\t\t.reduce(\r\n\t\t\t(classes, [className, value]) =>\r\n\t\t\t\tclasses.concat(value ? className : undefined),\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.filter((className) => className !== undefined)\r\n\t\t.join(\" \");\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,UAAU,CAACC,kBAAkB,EAAE;EACtD,OAAOC,MAAM,CAACC,OAAO,CAACF,kBAAkB,CAAC,CACvCG,MAAM,CACN,CAACC,OAAO;IAAA,IAAE,CAACC,SAAS,EAAEC,KAAK,CAAC;IAAA,OAC3BF,OAAO,CAACG,MAAM,CAACD,KAAK,GAAGD,SAAS,GAAGG,SAAS,CAAC;EAAA,GAC9C,EAAE,CACF,CACAC,MAAM,CAAEJ,SAAS,IAAKA,SAAS,KAAKG,SAAS,CAAC,CAC9CE,IAAI,CAAC,GAAG,CAAC;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}