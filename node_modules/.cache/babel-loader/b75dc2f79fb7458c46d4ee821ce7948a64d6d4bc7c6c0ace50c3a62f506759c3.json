{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bount\\\\Documents\\\\GitHub\\\\Thinkful-Flashcard-App\\\\src\\\\Layout\\\\Cards\\\\FlashCard.js\",\n  _s = $RefreshSig$();\n//--------------IMPORTS-----------------\n\nimport React, { useState } from \"react\";\nimport classNames from \"../../utils/class-names\";\nimport \"./FlashCard.css\";\n\n//--------------FUNCTION AND COMPONENTS-----------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashCard(_ref) {\n  _s();\n  let {\n    handleNext,\n    deck = {\n      cards: []\n    },\n    cardId = 0\n  } = _ref;\n  const {\n    cards\n  } = deck;\n  const card = cards[cardId] || {};\n  const [side, setSide] = useState(true);\n  // flipCard function will set the side to the opposite of what it is. If side is true, then it will be false. If side is false, then it will be true.\n  function flipCard() {\n    setSide(!side);\n  }\n  // assign nextButton variable to a button element. If side is false, then the button will be displayed. Otherwise, it will be an empty string.\n  const nextButton = !side ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-primary btn-next\",\n    onClick: () => {\n      setSide(true);\n      handleNext();\n    },\n    children: \"Next\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) : \"\";\n  //--------------RETURN-----------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card my-1 front\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames({\n        \"card-body\": true,\n        front: side,\n        back: !side\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Card \", cardId + 1, \" of \", cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text front-text\",\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text back-text\",\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: flipCard,\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), nextButton]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n  //-----------------END RETURN---------------------\n}\n//------------END FUNCTION AND COMPONENTS-----------------\n\n//---------------------EXPORT-----------------\n_s(FlashCard, \"x/BBRmMgr2oucn/tw/MoDRDu0DE=\");\n_c = FlashCard;\nexport default FlashCard;\nvar _c;\n$RefreshReg$(_c, \"FlashCard\");","map":{"version":3,"names":["React","useState","classNames","FlashCard","handleNext","deck","cards","cardId","card","side","setSide","flipCard","nextButton","front","back","length"],"sources":["C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/src/Layout/Cards/FlashCard.js"],"sourcesContent":["//--------------IMPORTS-----------------\r\n\r\nimport React, { useState } from \"react\";\r\nimport classNames from \"../../utils/class-names\";\r\nimport \"./FlashCard.css\";\r\n\r\n\r\n//--------------FUNCTION AND COMPONENTS-----------------\r\nfunction FlashCard({ handleNext, deck = { cards: [] }, cardId = 0 }) {\r\n  const { cards } = deck;\r\n  const card = cards[cardId] || {};\r\n  const [side, setSide] = useState(true);\r\n// flipCard function will set the side to the opposite of what it is. If side is true, then it will be false. If side is false, then it will be true.\r\n  function flipCard() {\r\n    setSide(!side);\r\n  }\r\n// assign nextButton variable to a button element. If side is false, then the button will be displayed. Otherwise, it will be an empty string.\r\n  const nextButton = !side ? (\r\n    <button\r\n      className='btn btn-primary btn-next'\r\n      onClick={() => {\r\n        setSide(true);\r\n        handleNext();\r\n      }}\r\n    >\r\n      Next\r\n    </button>\r\n  ) : (\r\n    \"\"\r\n  );\r\n  //--------------RETURN-----------------\r\n  return (\r\n    <div className='card my-1 front'>\r\n      <div\r\n        className={classNames({ \"card-body\": true, front: side, back: !side })}\r\n      >\r\n        <h5 className='card-title'>\r\n          Card {cardId + 1} of {cards.length}\r\n        </h5>\r\n        <p className='card-text front-text'>{card.front}</p>\r\n        <p className='card-text back-text'>{card.back}</p>\r\n        <button className='btn btn-secondary' onClick={flipCard}>\r\n          Flip\r\n        </button>\r\n        {nextButton}\r\n      </div>\r\n    </div>\r\n  );\r\n  //-----------------END RETURN---------------------\r\n}\r\n//------------END FUNCTION AND COMPONENTS-----------------\r\n\r\n//---------------------EXPORT-----------------\r\n\r\n\r\nexport default FlashCard;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,iBAAiB;;AAGxB;AAAA;AACA,SAASC,SAAS,OAAmD;EAAA;EAAA,IAAlD;IAAEC,UAAU;IAAEC,IAAI,GAAG;MAAEC,KAAK,EAAE;IAAG,CAAC;IAAEC,MAAM,GAAG;EAAE,CAAC;EACjE,MAAM;IAAED;EAAM,CAAC,GAAGD,IAAI;EACtB,MAAMG,IAAI,GAAGF,KAAK,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;EAChC,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC;EACE,SAASU,QAAQ,GAAG;IAClBD,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB;EACF;EACE,MAAMG,UAAU,GAAG,CAACH,IAAI,gBACtB;IACE,SAAS,EAAC,0BAA0B;IACpC,OAAO,EAAE,MAAM;MACbC,OAAO,CAAC,IAAI,CAAC;MACbN,UAAU,EAAE;IACd,CAAE;IAAA,UACH;EAED;IAAA;IAAA;IAAA;EAAA,QAAS,GAET,EACD;EACD;EACA,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,uBAC9B;MACE,SAAS,EAAEF,UAAU,CAAC;QAAE,WAAW,EAAE,IAAI;QAAEW,KAAK,EAAEJ,IAAI;QAAEK,IAAI,EAAE,CAACL;MAAK,CAAC,CAAE;MAAA,wBAEvE;QAAI,SAAS,EAAC,YAAY;QAAA,WAAC,OACpB,EAACF,MAAM,GAAG,CAAC,EAAC,MAAI,EAACD,KAAK,CAACS,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/B,eACL;QAAG,SAAS,EAAC,sBAAsB;QAAA,UAAEP,IAAI,CAACK;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACpD;QAAG,SAAS,EAAC,qBAAqB;QAAA,UAAEL,IAAI,CAACM;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eAClD;QAAQ,SAAS,EAAC,mBAAmB;QAAC,OAAO,EAAEH,QAAS;QAAA,UAAC;MAEzD;QAAA;QAAA;QAAA;MAAA,QAAS,EACRC,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACF;EAER;AACF;AACA;;AAEA;AAAA,GA5CST,SAAS;AAAA,KAATA,SAAS;AA+ClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}