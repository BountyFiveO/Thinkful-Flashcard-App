{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bount\\\\Documents\\\\GitHub\\\\Thinkful-Flashcard-App\\\\src\\\\Layout\\\\Cards\\\\EditCard.js\",\n  _s = $RefreshSig$();\n//------------------------START IMPORTS------------------------\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport { readCard, readDeck, updateCard } from \"../../utils/api/index\";\n//------------------------END IMPORTS------------------------\n\n//------------------------START FUNCTION EDITCARD------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditCard() {\n  _s();\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [card, setCard] = useState({});\n  const name = deck.name ? deck.name : \"Deck\"; // if name is equal to deck.name, then return deck.name, if not, then return \"Deck\"\n\n  //One useEffect for both loading the deck and the card as they are connected and should both be aborted when leaving this Component\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    //Load the deck for navbar information\n    async function loadDeck() {\n      try {\n        const deckInfo = await readDeck(deckId, abortController.signal); //assign a variable deckInfo to the result of readDeck once the data is passed in the setDeck the value of deckInfo will be passed in\n        setDeck(deckInfo); //this sets the value of deck to deckInfo\n      } catch (error) {\n        //if error is thrown, then the error will be caught and the error will be thrown\n        if (error.name === \"AbortError\") {\n          //if the error name is equal to AbortError, then the console will log aborted\n          console.info(\"aborted\"); //if the error name is not equal to AbortError, then the error will be thrown\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    //load the card for the form and the card information\n    async function loadCard() {\n      try {\n        const cardInfo = await readCard(cardId, abortController.signal);\n        setCard(cardInfo);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.info(\"aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadDeck(); //loads the deck information\n    loadCard(); //loads the card information\n\n    return () => abortController.abort(); //returns the abortController to abort the fetch if any of the above functions are not completed\n  }, [deckId, cardId]);\n\n  //Updates the card and returns to the deck details screen once the card is updated\n  async function handleSubmit(card) {\n    try {\n      await updateCard(card);\n      history.push(`/decks/${deckId}`);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  //Returns to the deck details screen if the user cancels the edit\n  function handleCancel() {\n    history.push(`/decks/${deckId}`);\n  }\n  //------------------------START RETURN------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: [\"Edit Card \", cardId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      handleSubmit: handleSubmit,\n      handleCancel: handleCancel,\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n  //------------------------END RETURN------------------------\n}\n//------------------------END FUNCTION EDITCARD------------------------\n\n//------------------------START EXPORT------------------------\n_s(EditCard, \"WHRMXHtuPJ1mP8hKDRC4PK0IIJo=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = EditCard;\nexport default EditCard;\nvar _c;\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useParams","CardForm","readCard","readDeck","updateCard","EditCard","history","deckId","cardId","deck","setDeck","card","setCard","name","abortController","AbortController","loadDeck","deckInfo","signal","error","console","info","loadCard","cardInfo","abort","handleSubmit","push","err","handleCancel"],"sources":["C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/src/Layout/Cards/EditCard.js"],"sourcesContent":["//------------------------START IMPORTS------------------------\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm\";\r\nimport { readCard, readDeck, updateCard } from \"../../utils/api/index\";\r\n//------------------------END IMPORTS------------------------\r\n\r\n//------------------------START FUNCTION EDITCARD------------------------\r\nfunction EditCard() {\r\n\tconst history = useHistory();\r\n\tconst { deckId, cardId } = useParams();\r\n\tconst [deck, setDeck] = useState({});\r\n\tconst [card, setCard] = useState({});\r\n\r\n\tconst name = deck.name ? deck.name : \"Deck\"; // if name is equal to deck.name, then return deck.name, if not, then return \"Deck\"\r\n\r\n\t//One useEffect for both loading the deck and the card as they are connected and should both be aborted when leaving this Component\r\n\tuseEffect(() => {\r\n\t\tconst abortController = new AbortController();\r\n\r\n\t\t//Load the deck for navbar information\r\n\t\tasync function loadDeck() {\r\n\t\t\ttry {\r\n\t\t\t\tconst deckInfo = await readDeck(deckId, abortController.signal); //assign a variable deckInfo to the result of readDeck once the data is passed in the setDeck the value of deckInfo will be passed in\r\n\t\t\t\tsetDeck(deckInfo); //this sets the value of deck to deckInfo\r\n\t\t\t} catch (error) {\r\n\t\t\t\t//if error is thrown, then the error will be caught and the error will be thrown\r\n\t\t\t\tif (error.name === \"AbortError\") {\r\n\t\t\t\t\t//if the error name is equal to AbortError, then the console will log aborted\r\n\t\t\t\t\tconsole.info(\"aborted\"); //if the error name is not equal to AbortError, then the error will be thrown\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//load the card for the form and the card information\r\n\t\tasync function loadCard() {\r\n\t\t\ttry {\r\n\t\t\t\tconst cardInfo = await readCard(cardId, abortController.signal);\r\n\t\t\t\tsetCard(cardInfo);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error.name === \"AbortError\") {\r\n\t\t\t\t\tconsole.info(\"aborted\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadDeck(); //loads the deck information\r\n\t\tloadCard(); //loads the card information\r\n\r\n\t\treturn () => abortController.abort(); //returns the abortController to abort the fetch if any of the above functions are not completed\r\n\t}, [deckId, cardId]);\r\n\r\n\t//Updates the card and returns to the deck details screen once the card is updated\r\n\tasync function handleSubmit(card) {\r\n\t\ttry {\r\n\t\t\tawait updateCard(card);\r\n\t\t\thistory.push(`/decks/${deckId}`);\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\t//Returns to the deck details screen if the user cancels the edit\r\n\tfunction handleCancel() {\r\n\t\thistory.push(`/decks/${deckId}`);\r\n\t}\r\n\t//------------------------START RETURN------------------------\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\"></span> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>{name}</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"breadcrumb-item active\"\r\n\t\t\t\t\t\taria-current=\"page\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tEdit Card {cardId}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h1>{name}: Add Card</h1>\r\n\t\t\t<CardForm\r\n\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\thandleCancel={handleCancel}\r\n\t\t\t\tcard={card}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n\t//------------------------END RETURN------------------------\r\n}\r\n//------------------------END FUNCTION EDITCARD------------------------\r\n\r\n//------------------------START EXPORT------------------------\r\nexport default EditCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}