{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bount\\\\Documents\\\\GitHub\\\\Thinkful-Flashcard-App\\\\src\\\\Layout\\\\Cards\\\\AddCard.js\",\n  _s = $RefreshSig$();\n//--------------------------IMPORTS--------------------------------\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport { createCard, readDeck } from \"../../utils/api/index\";\nimport \"./AddCard.css\";\n\n// --------------------------END IMPORTS----------------------------\n\n//---------------------------FUNCTIONS------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddCard() {\n  _s();\n  // assigning variables to useHistory and useParams and setting state for deck\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    // abort controller to prevent memory leaks\n    const abortController = new AbortController();\n    // async function to load deck\n    async function loadDeck() {\n      // try catch to load deck\n      try {\n        // assigning deckInfo to readDeck function\n        const deckInfo = await readDeck(deckId, abortController.signal);\n        // setting deck to deckInfo\n        setDeck(deckInfo);\n      } catch (error) {\n        // if error is abort error, console log aborted\n        if (error.name === \"AbortError\") {\n          console.info(\"aborted\");\n          // else throw error to console\n        } else {\n          throw error;\n        }\n      }\n    }\n    // calling loadDeck function\n    loadDeck();\n    // return abort controller to prevent memory leaks\n    return () => abortController.abort();\n    // deckId is dependency array to prevent infinite loop\n  }, [deckId]);\n\n  //Creates a new card\n  async function handleSubmit(card) {\n    // try catch to create card\n    try {\n      // assigning cardInfo to createCard function\n      // createCard function takes in deckId and card and calls showCardSuccessToast function after card is created successfully\n      await createCard(deckId, card);\n      showCardSuccessToast();\n      // catch error and throw error to console\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  //if cancel button is clicked, redirect to deck page\n  function handleCancel() {\n    history.push(`/decks/${deckId}`);\n  }\n  //function to display toast message when card is created successfully\n  function showCardSuccessToast() {\n    const toast = document.querySelector(\".card-toast\");\n    toast.classList.add(\"show\");\n    // after 2.5 seconds, remove show class from toast\n    setTimeout(() => toast.classList.remove(\"show\"), 2500);\n  }\n  // --------------------------END FUNCTIONS AND HANDLERS------------------\n\n  // --------------------------RETURN STATEMENT----------------------------\n\n  // the return statement renders the breadcrumb navigation, the deck name, the card form, and the toast message\n  // the toast message is hidden by default and is displayed when the card is created successfully\n  // the below code contains the HTML for the breadcrumb navigation, the deck name, the card form, and the toast message that is displayed when the card is created successfully\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-house-door-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 8\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deck.name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-toast alert alert-success hidden\",\n      children: \"Card Added!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      handleSubmit: handleSubmit,\n      handleCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n  // -----------------------------END RETURN STATEMENT-------------------------------\n\n  // --------------------------------END FUNCTION------------------------------------\n}\n\n// export AddCard function\n_s(AddCard, \"LFcHeghtlO2n685iTCKp37HNk7k=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = AddCard;\nexport default AddCard;\nvar _c;\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useParams","CardForm","createCard","readDeck","AddCard","history","deckId","deck","setDeck","abortController","AbortController","loadDeck","deckInfo","signal","error","name","console","info","abort","handleSubmit","card","showCardSuccessToast","err","handleCancel","push","toast","document","querySelector","classList","add","setTimeout","remove"],"sources":["C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/src/Layout/Cards/AddCard.js"],"sourcesContent":["//--------------------------IMPORTS--------------------------------\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm\";\r\nimport { createCard, readDeck } from \"../../utils/api/index\";\r\nimport \"./AddCard.css\";\r\n\r\n// --------------------------END IMPORTS----------------------------\r\n\r\n//---------------------------FUNCTIONS------------------------------\r\n\r\nfunction AddCard() {\r\n\t// assigning variables to useHistory and useParams and setting state for deck\r\n\tconst history = useHistory();\r\n\tconst { deckId } = useParams();\r\n\tconst [deck, setDeck] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\t// abort controller to prevent memory leaks\r\n\t\tconst abortController = new AbortController();\r\n\t\t// async function to load deck\r\n\t\tasync function loadDeck() {\r\n\t\t\t// try catch to load deck\r\n\t\t\ttry {\r\n\t\t\t\t// assigning deckInfo to readDeck function\r\n\t\t\t\tconst deckInfo = await readDeck(deckId, abortController.signal);\r\n\t\t\t\t// setting deck to deckInfo\r\n\t\t\t\tsetDeck(deckInfo);\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// if error is abort error, console log aborted\r\n\t\t\t\tif (error.name === \"AbortError\") {\r\n\t\t\t\t\tconsole.info(\"aborted\");\r\n\t\t\t\t\t// else throw error to console\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// calling loadDeck function\r\n\t\tloadDeck();\r\n\t\t// return abort controller to prevent memory leaks\r\n\t\treturn () => abortController.abort();\r\n\t\t// deckId is dependency array to prevent infinite loop\r\n\t}, [deckId]);\r\n\r\n\t//Creates a new card\r\n\tasync function handleSubmit(card) {\r\n\t\t// try catch to create card\r\n\t\ttry {\r\n\t\t\t// assigning cardInfo to createCard function\r\n\t\t\t// createCard function takes in deckId and card and calls showCardSuccessToast function after card is created successfully\r\n\t\t\tawait createCard(deckId, card);\r\n\t\t\tshowCardSuccessToast();\r\n\t\t\t// catch error and throw error to console\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\t//if cancel button is clicked, redirect to deck page\r\n\tfunction handleCancel() {\r\n\t\thistory.push(`/decks/${deckId}`);\r\n\t}\r\n\t//function to display toast message when card is created successfully\r\n\tfunction showCardSuccessToast() {\r\n\t\tconst toast = document.querySelector(\".card-toast\");\r\n\t\ttoast.classList.add(\"show\");\r\n\t\t// after 2.5 seconds, remove show class from toast\r\n\t\tsetTimeout(() => toast.classList.remove(\"show\"), 2500);\r\n\t}\r\n\t// --------------------------END FUNCTIONS AND HANDLERS------------------\r\n\r\n\t// --------------------------RETURN STATEMENT----------------------------\r\n\r\n\t// the return statement renders the breadcrumb navigation, the deck name, the card form, and the toast message\r\n\t// the toast message is hidden by default and is displayed when the card is created successfully\r\n\t// the below code contains the HTML for the breadcrumb navigation, the deck name, the card form, and the toast message that is displayed when the card is created successfully\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<i className=\"bi bi-house-door-fill\"></i> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"breadcrumb-item active\"\r\n\t\t\t\t\t\taria-current=\"page\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd Card\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h1>{deck.name}: Add Card</h1>\r\n\t\t\t<div className=\"card-toast alert alert-success hidden\">Card Added!</div>\r\n\r\n\t\t\t<CardForm\r\n\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\thandleCancel={handleCancel}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n\t// -----------------------------END RETURN STATEMENT-------------------------------\r\n\r\n\t// --------------------------------END FUNCTION------------------------------------\r\n}\r\n\r\n// export AddCard function\r\nexport default AddCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}