{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bount\\\\Documents\\\\GitHub\\\\Thinkful-Flashcard-App\\\\src\\\\Layout\\\\Decks\\\\StudyDeck.js\",\n  _s = $RefreshSig$();\n//----------------------START IMPORTS-----------------\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport FlashCard from \"../Cards/FlashCard\";\nimport { readDeck } from \"../../utils/api/index\";\nimport NotEnoughCards from \"../../NotEnoughCards\";\nimport FlashCardStructure from \"../Cards/FlashCardStyle\";\n// ----------------------END IMPORTS-----------------\n\n//----------------------START FUNCTION STUDYDECK-----------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudyDeck() {\n  _s();\n  var _deck$cards;\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams(); //assign a variable deckId to the result of useParams\n  const [deck, setDeck] = useState({\n    cards: []\n  }); //Set placeholder deck before loading to prevent errors when loading\n  const [cardId, setCardId] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n\n  //Set placeholder deck name before loading\n  const name = deck.name ? deck.name : \"Deck Name\"; //if name is equal to deck.name, then return deck.name, if not, then return \"Deck Name\"\n\n  // ----------------------START USEEFFECT-----------------\n  useEffect(() => {\n    const abortController = new AbortController(); //assign a variable abortController to the result of AbortController\n    // create an async function called loadDeck that will be called when the useEffect function is called\n    async function loadDeck() {\n      //Load the deck for navbar information\n      try {\n        const deckInfo = await readDeck(deckId, abortController.signal); //assign a variable deckInfo to the result of readDeck once the data is passed in the setDeck the value of deckInfo will be passed in\n        setDeck(deckInfo);\n        setLoaded(true);\n      } catch (error) {\n        //if there is an error, then console.log the error\n        if (error.name === \"AbortError\") {\n          //if the error name is equal to AbortError, then console.log aborted\n          console.info(\"aborted\");\n        } else {\n          //if the error name is not equal to AbortError, then console.log the error\n          throw error;\n        }\n      }\n    }\n    loadDeck(); //call the loadDeck function\n\n    return () => abortController.abort(); //return the abortController function\n  }, [deckId]);\n  // ----------------------END USEEFFECT-----------------\n\n  //----------------------START FUNCTION HANDLENEXT-----------------\n\n  function handleNext() {\n    //create a function called handleNext\n    if (cardId >= deck.cards.length - 1) {\n      //if cardId is greater than or equal to the length of the deck.cards array minus 1\n      if (window.confirm(\"Restart cards?\")) {\n        //if the window.confirm is equal to true, then setCardId to 0\n        setCardId(0);\n      } else {\n        //if the window.confirm is equal to false, then redirect to the home page\n        history.push(\"/\");\n      }\n    } else {\n      //if cardId is not greater than or equal to the length of the deck.cards array minus 1, then setCardId to cardId plus 1\n      setCardId(cardId + 1);\n    }\n  }\n  //\n  const flashCards =\n  //create a variable called flashCards\n  (deck === null || deck === void 0 ? void 0 : (_deck$cards = deck.cards) === null || _deck$cards === void 0 ? void 0 : _deck$cards.length) > 2 ?\n  /*#__PURE__*/\n  //if the length of the deck.cards array is greater than 2, then return the FlashCard component, if not, then return the NotEnoughCards component\n  _jsxDEV(FlashCard, {\n    handleNext: handleNext,\n    deck: deck,\n    cardId: cardId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(NotEnoughCards, {\n    deck: deck\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 4\n  }, this);\n  const content = loaded ? flashCards : /*#__PURE__*/_jsxDEV(FlashCardStructure, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 40\n  }, this); //if loaded is equal to true, then return flashCards, if not, then return the FlashCardStructure component\n  // -------------------START RETURN-----------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [name, \": Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n  // -------------------END RETURN-----------------\n}\n// ----------------------END FUNCTION STUDYDECK-----------------\n\n// -------------------START EXPORT-----------------\n_s(StudyDeck, \"tw/XFuuufK53RbB8qxTRydGIMzU=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = StudyDeck;\nexport default StudyDeck;\nvar _c;\n$RefreshReg$(_c, \"StudyDeck\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useParams","FlashCard","readDeck","NotEnoughCards","FlashCardStructure","StudyDeck","history","deckId","deck","setDeck","cards","cardId","setCardId","loaded","setLoaded","name","abortController","AbortController","loadDeck","deckInfo","signal","error","console","info","abort","handleNext","length","window","confirm","push","flashCards","content"],"sources":["C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/src/Layout/Decks/StudyDeck.js"],"sourcesContent":["//----------------------START IMPORTS-----------------\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport FlashCard from \"../Cards/FlashCard\";\r\nimport { readDeck } from \"../../utils/api/index\";\r\nimport NotEnoughCards from \"../../NotEnoughCards\";\r\nimport FlashCardStructure from \"../Cards/FlashCardStyle\";\r\n// ----------------------END IMPORTS-----------------\r\n\r\n//----------------------START FUNCTION STUDYDECK-----------------\r\nfunction StudyDeck() {\r\n\tconst history = useHistory();\r\n\tconst { deckId } = useParams(); //assign a variable deckId to the result of useParams\r\n\tconst [deck, setDeck] = useState({ cards: [] }); //Set placeholder deck before loading to prevent errors when loading\r\n\tconst [cardId, setCardId] = useState(0);\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\r\n\t//Set placeholder deck name before loading\r\n\tconst name = deck.name ? deck.name : \"Deck Name\"; //if name is equal to deck.name, then return deck.name, if not, then return \"Deck Name\"\r\n\r\n\t// ----------------------START USEEFFECT-----------------\r\n\tuseEffect(() => {\r\n\t\tconst abortController = new AbortController(); //assign a variable abortController to the result of AbortController\r\n\t\t// create an async function called loadDeck that will be called when the useEffect function is called\r\n\t\tasync function loadDeck() {\r\n\t\t\t//Load the deck for navbar information\r\n\t\t\ttry {\r\n\t\t\t\tconst deckInfo = await readDeck(deckId, abortController.signal); //assign a variable deckInfo to the result of readDeck once the data is passed in the setDeck the value of deckInfo will be passed in\r\n\t\t\t\tsetDeck(deckInfo);\r\n\t\t\t\tsetLoaded(true);\r\n\t\t\t} catch (error) {\r\n\t\t\t\t//if there is an error, then console.log the error\r\n\t\t\t\tif (error.name === \"AbortError\") {\r\n\t\t\t\t\t//if the error name is equal to AbortError, then console.log aborted\r\n\t\t\t\t\tconsole.info(\"aborted\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//if the error name is not equal to AbortError, then console.log the error\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadDeck(); //call the loadDeck function\r\n\r\n\t\treturn () => abortController.abort(); //return the abortController function\r\n\t}, [deckId]);\r\n\t// ----------------------END USEEFFECT-----------------\r\n\r\n\t//----------------------START FUNCTION HANDLENEXT-----------------\r\n\r\n\tfunction handleNext() {\r\n\t\t//create a function called handleNext\r\n\t\tif (cardId >= deck.cards.length - 1) {\r\n\t\t\t//if cardId is greater than or equal to the length of the deck.cards array minus 1\r\n\t\t\tif (window.confirm(\"Restart cards?\")) {\r\n\t\t\t\t//if the window.confirm is equal to true, then setCardId to 0\r\n\t\t\t\tsetCardId(0);\r\n\t\t\t} else {\r\n\t\t\t\t//if the window.confirm is equal to false, then redirect to the home page\r\n\t\t\t\thistory.push(\"/\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//if cardId is not greater than or equal to the length of the deck.cards array minus 1, then setCardId to cardId plus 1\r\n\t\t\tsetCardId(cardId + 1);\r\n\t\t}\r\n\t}\r\n\t//\r\n\tconst flashCards = //create a variable called flashCards\r\n\t\tdeck?.cards?.length > 2 ? ( //if the length of the deck.cards array is greater than 2, then return the FlashCard component, if not, then return the NotEnoughCards component\r\n\t\t\t<FlashCard\r\n\t\t\t\thandleNext={handleNext}\r\n\t\t\t\tdeck={deck}\r\n\t\t\t\tcardId={cardId}\r\n\t\t\t/>\r\n\t\t) : (\r\n\t\t\t<NotEnoughCards deck={deck} />\r\n\t\t);\r\n\tconst content = loaded ? flashCards : <FlashCardStructure />; //if loaded is equal to true, then return flashCards, if not, then return the FlashCardStructure component\r\n\t// -------------------START RETURN-----------------\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\"></span> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>{name}</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"breadcrumb-item active\"\r\n\t\t\t\t\t\taria-current=\"page\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStudy\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h1>{name}: Study</h1>\r\n\t\t\t{content}\r\n\t\t</div>\r\n\t);\r\n\t// -------------------END RETURN-----------------\r\n}\r\n// ----------------------END FUNCTION STUDYDECK-----------------\r\n\r\n// -------------------START EXPORT-----------------\r\nexport default StudyDeck;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}