{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bount\\\\Documents\\\\GitHub\\\\Thinkful-Flashcard-App\\\\src\\\\Layout\\\\Decks\\\\CreateDeck.js\",\n  _s = $RefreshSig$();\n//--------------START IMPORTS-----------------\n\nimport React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { createDeck } from \"../../utils/api/index\";\n//--------------END IMPORTS-----------------\n\n//--------------START FUNCTION AND COMPONENTS-----------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateDeck() {\n  _s();\n  // assign history variable to useHistory hook and create a function called handleSubmit.\n  // The handleSubmit function will call the createDeck function from the api/index.js file.\n  // The handleSubmit function will also push the user to the deck that was just created.\n  const history = useHistory();\n  function handleSubmit(deck) {\n    const abortController = new AbortController(); // abortController is used to abort the fetch request if the user navigates away from the page before the fetch request is complete.\n\n    async function callCreateDeck() {\n      // an async callCreateDeck function will call the createDeck function from the api/index.js file.\n      try {\n        const deckInfo = await createDeck(deck, abortController.signal); // the deckInfo variable will be assigned to the response from the createDeck function.\n        history.push(`/decks/${deckInfo.id}`); // the user will be pushed to the deck that was just created.\n      } catch (err) {\n        // if the user navigates away from the page before the fetch request is complete, then the abortController will abort the fetch request.\n        if (err.name === \"AbortError\") {\n          // if the fetch request is aborted, then the console will log \"aborted\".\n          console.info(\"aborted\"); //console.log the aborted error message.\n        } else {\n          // if the fetch request is not aborted, but is still an error, then the error will be thrown.\n          throw err;\n        }\n      }\n    }\n    callCreateDeck(); // call the callCreateDeck function.\n    // the useEffect hook will return a function that will abort the fetch request if the user navigates away from the page before the fetch request is complete.\n    return () => {\n      abortController.abort();\n    };\n  }\n  // create a function called handleCancel that will push the user to the home page.\n  function handleCancel() {\n    history.push(\"/\");\n  }\n\n  //--------------START RETURN-----------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 8\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Create Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DeckForm, {\n      handleSubmit: handleSubmit,\n      handleCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n  //--------------END RETURN-----------------\n}\n//--------------END FUNCTION AND COMPONENTS-----------------\n\n//--------------EXPORT CreateDeck-----------------\n_s(CreateDeck, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = CreateDeck;\nexport default CreateDeck;\nvar _c;\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"names":["React","Link","useHistory","DeckForm","createDeck","CreateDeck","history","handleSubmit","deck","abortController","AbortController","callCreateDeck","deckInfo","signal","push","id","err","name","console","info","abort","handleCancel"],"sources":["C:/Users/bount/Documents/GitHub/Thinkful-Flashcard-App/src/Layout/Decks/CreateDeck.js"],"sourcesContent":["//--------------START IMPORTS-----------------\r\n\r\nimport React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"./DeckForm\";\r\nimport { createDeck } from \"../../utils/api/index\";\r\n//--------------END IMPORTS-----------------\r\n\r\n//--------------START FUNCTION AND COMPONENTS-----------------\r\nfunction CreateDeck() {\r\n\t// assign history variable to useHistory hook and create a function called handleSubmit.\r\n\t// The handleSubmit function will call the createDeck function from the api/index.js file.\r\n\t// The handleSubmit function will also push the user to the deck that was just created.\r\n\tconst history = useHistory();\r\n\tfunction handleSubmit(deck) {\r\n\t\tconst abortController = new AbortController(); // abortController is used to abort the fetch request if the user navigates away from the page before the fetch request is complete.\r\n\r\n\t\tasync function callCreateDeck() {\r\n\t\t\t// an async callCreateDeck function will call the createDeck function from the api/index.js file.\r\n\t\t\ttry {\r\n\t\t\t\tconst deckInfo = await createDeck(deck, abortController.signal); // the deckInfo variable will be assigned to the response from the createDeck function.\r\n\t\t\t\thistory.push(`/decks/${deckInfo.id}`); // the user will be pushed to the deck that was just created.\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// if the user navigates away from the page before the fetch request is complete, then the abortController will abort the fetch request.\r\n\t\t\t\tif (err.name === \"AbortError\") {\r\n\t\t\t\t\t// if the fetch request is aborted, then the console will log \"aborted\".\r\n\t\t\t\t\tconsole.info(\"aborted\"); //console.log the aborted error message.\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if the fetch request is not aborted, but is still an error, then the error will be thrown.\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcallCreateDeck(); // call the callCreateDeck function.\r\n\t\t// the useEffect hook will return a function that will abort the fetch request if the user navigates away from the page before the fetch request is complete.\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t};\r\n\t}\r\n\t// create a function called handleCancel that will push the user to the home page.\r\n\tfunction handleCancel() {\r\n\t\thistory.push(\"/\");\r\n\t}\r\n\r\n\t//--------------START RETURN-----------------\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* breadcrumb navigation, ordered list, list items, links, and buttons */}\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\"></span> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"breadcrumb-item active\"\r\n\t\t\t\t\t\taria-current=\"page\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate Deck\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h1>Create Deck</h1>\r\n\t\t\t<DeckForm\r\n\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\thandleCancel={handleCancel}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n\t//--------------END RETURN-----------------\r\n}\r\n//--------------END FUNCTION AND COMPONENTS-----------------\r\n\r\n//--------------EXPORT CreateDeck-----------------\r\nexport default CreateDeck;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,UAAU,QAAQ,uBAAuB;AAClD;;AAEA;AAAA;AACA,SAASC,UAAU,GAAG;EAAA;EACrB;EACA;EACA;EACA,MAAMC,OAAO,GAAGJ,UAAU,EAAE;EAC5B,SAASK,YAAY,CAACC,IAAI,EAAE;IAC3B,MAAMC,eAAe,GAAG,IAAIC,eAAe,EAAE,CAAC,CAAC;;IAE/C,eAAeC,cAAc,GAAG;MAC/B;MACA,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMR,UAAU,CAACI,IAAI,EAAEC,eAAe,CAACI,MAAM,CAAC,CAAC,CAAC;QACjEP,OAAO,CAACQ,IAAI,CAAE,UAASF,QAAQ,CAACG,EAAG,EAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACb;QACA,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC9B;UACAC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM;UACN;UACA,MAAMH,GAAG;QACV;MACD;IACD;IACAL,cAAc,EAAE,CAAC,CAAC;IAClB;IACA,OAAO,MAAM;MACZF,eAAe,CAACW,KAAK,EAAE;IACxB,CAAC;EACF;EACA;EACA,SAASC,YAAY,GAAG;IACvBf,OAAO,CAACQ,IAAI,CAAC,GAAG,CAAC;EAClB;;EAEA;EACA,oBACC;IAAA,wBAEC;MAAK,cAAW,YAAY;MAAA,uBAC3B;QAAI,SAAS,EAAC,YAAY;QAAA,wBACzB;UAAI,SAAS,EAAC,iBAAiB;UAAA,uBAC9B,QAAC,IAAI;YAAC,EAAE,EAAC,GAAG;YAAA,wBACX;cAAM,SAAS,EAAC;YAAY;cAAA;cAAA;cAAA;YAAA,QAAQ,SACrC;UAAA;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QACH,eACL;UACC,SAAS,EAAC,wBAAwB;UAClC,gBAAa,MAAM;UAAA,UACnB;QAED;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB,QAAC,QAAQ;MACR,YAAY,EAAEP,YAAa;MAC3B,YAAY,EAAEc;IAAa;MAAA;MAAA;MAAA;IAAA,QAC1B;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;EAEP;AACD;AACA;;AAEA;AAAA,GAjEShB,UAAU;EAAA,QAIFH,UAAU;AAAA;AAAA,KAJlBG,UAAU;AAkEnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}